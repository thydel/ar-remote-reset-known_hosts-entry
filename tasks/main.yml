---

- assert: { quiet: True, that: remote_node is defined and remote_node != 'unknown.nowhere' }

- name: ensure dig available
  apt: { name: dnsutils }

- name: get IP of remote node
  register: dig_
  check_mode: False
  changed_when: False
  command: dig +short +ndots=2 +search {{ remote_node }}

- assert: { quiet: True, that: dig_.stdout != '' }

- name: Create known_hosts if needed
  command: touch ~/.ssh/known_hosts
  args:
    creates: ~/.ssh/known_hosts

- name: Remove previous host name key from my known_hosts
  command: ssh-keygen -R {{ remote_node }}

- name: Remove previous host ip key from my known_hosts
  command: ssh-keygen -R {{ item }}
  with_items: dig_.stdout_lines

- name: And add hashed entry for new host keys
  when: ansible_lsb.codename != 'squeeze'
  shell: ssh-keyscan -t rsa,dsa,ecdsa -H {{ remote_node }} >> ~/.ssh/known_hosts

- name: And add hashed entry for new host keys
  when: ansible_lsb.codename == 'squeeze'
  shell: ssh-keyscan -t rsa,dsa -H {{ remote_node }} >> ~/.ssh/known_hosts
